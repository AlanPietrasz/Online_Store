<!-- shop.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="style.css" />
    <link rel="stylesheet" href="shopstyle.css" />
    <title>Shop</title>
    <script>
        function deleteProduct(productId) {
          if (!confirm('Are you sure you want to delete this product?')) {
            return;
          }
        
          fetch('/deleteProduct', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId: productId })
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            document.getElementById('product_' + productId).remove();
          })
          .catch(error => {
            console.error('There has been a problem with your fetch operation:', error);
          });
        }

    function toggleCartItem(productId, button) {
      const quantityInput = document.getElementById('quantity_' + productId);
      const quantity = parseInt(quantityInput.value, 10);
      if (isNaN(quantity) || quantity < 1) {
        alert('Please enter a valid quantity.');
        return;
      }
  
      const action = button.classList.contains('in-cart') ? 'shopRemoveFromCart' : 'shopAddToCart';
      const requestBody = { productId: productId, quantity: quantity };
  
      fetch(`/${action}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (action === 'shopRemoveFromCart') {
          button.classList.remove('in-cart');
          button.textContent = 'Add to Cart';
        } else {
          button.classList.add('in-cart');
          button.textContent = 'Remove from Cart';
        }
      })
      .catch(error => {
        console.error('There has been a problem with your fetch operation:', error);
      });
    }

function editProduct(productId) {
  fetch(`/getProductDetails?productId=${productId}`)
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(productData => {

    const editFormHtml = `
      <div id="editFormContainer_${productId}" class="edit-form">
        <form id="editForm_${productId}">
          <label for="productName_${productId}">Product Name</label>
          <input type="text" id="productName_${productId}" name="productName" value="${productData.productName}" />

          <label for="description_${productId}">Description</label>
          <textarea id="description_${productId}" name="description" class="no-resize" rows="5">${productData.description}</textarea>

          <label for="price_${productId}">Price</label>
          <input type="text" id="price_${productId}" name="price" value="${productData.price !== null ? productData.price : ''}" placeholder="Enter price or leave blank for null" />

          <label for="quantity_${productId}">Quantity</label>
          <input type="text" id="quantity_${productId}" name="quantity" value="${productData.quantity !== null ? productData.quantity : ''}" placeholder="Enter quantity or leave blank for unlimited" />

          <button type="button" onclick="submitEdit(${productId})">Submit Changes</button>
          <button type="button" onclick="cancelEdit(${productId})" class="cancel-button">Cancel</button>
        </form>
      </div>
    `;

document.getElementById('product_' + productId).innerHTML += editFormHtml;
  })
  .catch(error => {
    console.error('There has been a problem with your fetch operation:', error);
  });
}

function cancelEdit(productId) {
  const editFormContainer = document.getElementById('editFormContainer_' + productId);
  if (editFormContainer) {
    editFormContainer.remove();
  }
}

    
function submitEdit(productId) {
  const editForm = document.getElementById('editForm_' + productId);
  const formData = new FormData(editForm);

  const productData = {};
  formData.forEach((value, key) => { productData[key] = value; });

  fetch('/updateProduct', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ ...productData, productId })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    const productDiv = document.getElementById('product_' + productId);
    if (productDiv) {
      productDiv.querySelector('h2').innerText = productData.productName;
      productDiv.querySelector('p').innerText = productData.description;
      const priceElement = productDiv.querySelector('.price');
      const quantityElement = productDiv.querySelector('.quantity');

      if (productData.price === '') {
        priceElement.innerText = 'Price: Not yet available for purchase';
      } else {
        priceElement.innerText = 'Price: $' + parseFloat(productData.price).toFixed(2);
      }

      if (productData.quantity === '') {
        quantityElement.innerText = 'Unlimited quantity';
      } else {
        quantityElement.innerText = 'Quantity: ' + parseInt(productData.quantity);
      }
    }

    const editFormContainer = document.getElementById('editFormContainer_' + productId);
    if (editFormContainer) {
      editFormContainer.remove();
    }

    alert('Product updated successfully');
  })
  .catch(error => {
    console.error('There has been a problem with your fetch operation:', error);
  });
}

function showAddProductForm() {
    const productName = prompt("Enter product name:");
    if (!productName.trim()) {
        alert("Product name cannot be empty.");
        return;
    }
    const description = prompt("Enter product description:");
    const price = prompt("Enter product price:");
    const quantity = prompt("Enter product quantity:");

    if (productName) {
        fetch('/addProduct', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productName, description, price, quantity })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Product added successfully');
                window.location.reload();
            } else {
                alert('Failed to add product');
            }
        })
        .catch(error => {
            console.error('There was an error adding the product:', error);
        });
    }
}
    </script>
    
        
        
</head>

<body>
    <div class="header">
        <h1>Shop</h1>
    </div>

    <%- include('navigationbar', locals.user ) %>

    <% if (locals.error) { %>
        <div class="alert alert-danger">
            <%= locals.error %>
        </div>
    <% } %>

    <form action="/shop" method="get">
        <input type="text" name="searchTerm" placeholder="Search products..." value="<%= searchTerm || '' %>" />
        <select name="orderBy">
            <option value="productName" <%= orderBy === 'productName' ? 'selected' : '' %>>Product Name</option>
            <option value="price" <%= orderBy === 'price' ? 'selected' : '' %>>Price</option>
        </select>
        <select name="direction">
            <option value="ASC" <%= direction === 'ASC' ? 'selected' : '' %>>Ascending</option>
            <option value="DESC" <%= direction === 'DESC' ? 'selected' : '' %>>Descending</option>
        </select>
        <select name="pageSize">
            <option value="2" <%= pageSize === 2 ? 'selected' : '' %>>2 per page</option>
            <option value="5" <%= pageSize === 5 ? 'selected' : '' %>>5 per page</option>
            <option value="10" <%= pageSize === 10 ? 'selected' : '' %>>10 per page</option>
            <option value="20" <%= pageSize === 20 ? 'selected' : '' %>>20 per page</option>
            <option value="30" <%= pageSize === 30 ? 'selected' : '' %>>30 per page</option>
            <option value="40" <%= pageSize === 40 ? 'selected' : '' %>>40 per page</option>
            <option value="50" <%= pageSize === 50 ? 'selected' : '' %>>50 per page</option>
        </select>
        <button type="submit">Search and Sort Products</button>
    </form>

    <% if (userRoles.includes('admin')) { %>
      <button type="button" id="addNewProduct" onclick="showAddProductForm()">Add New Product</button>
      <div id="addProductModal" style="display: none;">
        <form id="addProductForm">
            <label for="productName">Product Name:</label>
            <input type="text" id="productName" name="productName" required>
    
            <label for="description">Description:</label>
            <textarea id="description" name="description" required></textarea>
    
            <label for="price">Price:</label>
            <input type="number" id="price" name="price" required>
    
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" name="quantity" required>
    
            <button type="submit">Add Product</button>
            <button type="button" onclick="hideAddProductForm()">Cancel</button>
        </form>
    </div>
  <% } %>
    
    <div class="products">
        <% products.forEach(function(product) { %>
            <% if (userRoles.includes('admin') || (product.quantity !== 0 && product.price !== null)) { %>
                <div class="product" id="product_<%= product.ID %>">
                    <h2><%= product.productName %></h2>
                    <p><%= product.description %></p>
                    <div class="info-container">
                    <% if (product.price === 0) { %>
                        <p class="price price-free">Price: Free</p>
                    <% } else if (product.price === null) { %>
                        <p class="price price-not-available">Price: Not yet available for purchase</p>
                    <% } else { %>
                        <p class="price">Price: $<%= product.price.toFixed(2) %></p>
                    <% } %>

                    <% if (product.quantity === 0) { %>
                        <p class="quantity quantity-not-available">Not available</p>
                    <% } else if (product.quantity === null) { %>
                        <p class="quantity quantity-unlimited">Unlimited quantity</p>
                    <% } else { %>
                        <p class="quantity">Quantity: <%= product.quantity %></p>
                    <% } %>

                    <% if (userRoles.includes('user') && product.quantity !== 0) { %>
                        <form action="/shopAddToCart" method="post">
                            <input type="hidden" name="productId" value="<%= product.ID %>">
                            <!-- <input type="number" name="quantity" value="1" min="1"> -->
                            <input type="number" id="quantity_<%= product.ID %>" name="quantity" value="1" min="1" class="quantity-input">
                            <button type="button" id="addToCart_<%= product.ID %>" onclick="toggleCartItem(<%= product.ID %>, this)" class="add-to-cart-button">Add to Cart</button>
                        </form>
                    <% } %>
                    </div>
                    <% if (userRoles.includes('admin')) { %>
                        <div class="button-container">
                          <button type="button" onclick="editProduct(<%= product.ID %>)">Edit</button>
                          <button type="button" onclick="deleteProduct(<%= product.ID %>)" class="delete-button">Delete</button>
                      </div>
                    <% } %>
                </div>
            <% } %>
        <% }); %>
    </div>

    <div class="pagination">
        <% for(let i = 1; i <= totalPages; i++) { %>
            <a href="/shop?page=<%= i %>&orderBy=<%= orderBy %>&direction=<%= direction %>&pageSize=<%= pageSize %>"
            class="<%= page == i ? 'active' : '' %>"><%= i %></a>
        <% } %>
    </div>

</body>

</html>